0.100
  - Port the dist to Moo, so that the core of Message::Passing
    uses no XS code. Components can still be written using full
    Moose, as Moo supports upgrading classes to full Moose classes.

    Note however that this implies the following changes to custom scripts:

    - Scripts should use MooX::Options instead of MooseX::Getopt,
      attributes will need to be updated to use the 'option' keyword
      rather than 'has'.

    - Message::Passing::Role::CLIComponent is now built on top of
      Package::Variant rather than MooseX::Role::Parameterized,
      and so scripts should now import it and use the function
      provided to generate roles.

  - Add UDP socket Input and Output, allowing transit of arbitrary
    UDP packets.

  - Add Travis continuous integration to the project.

0.010
  - Doc fix in Message::Passing::Manual::Cookbook
    https://github.com/suretec/Message-Passing/pull/2

  - Add Crypt::CBC encoder and decoder.

  - Add Gzip and Bzip2 encoders and decoders.

0.009
  - Add Message::Passing::Manual::Components.

  - Add SYNOPSIS to Message::Passing::Role::Filter.

  - Additional documentation in Message::Passing::Manual.

  - Refactor building connection managers so less duplicate code
    is needed in components.

  - Make STDIN input saner.

  - Add an 'error chain' concept, allowing components to have a
    way of reporting connection (or other) issues out of band
    with the message stream.
    This defaults to STDERR, however can be overridden per component,
    or for a whole chain.

  - Add error_log() function to the DSL for setting the error chain up
    for a whole chain.

  - Use the error chain in Message::Passing::Role::ConnectionManager
    to output errors when connections disconnect / timeout / reconnect.

  - Cleanups to Message::Passing::Input::FileTail to not leak processes
    and file handles if the instance of the Input class is destroyed.

0.008
  - Add standard roles to unify the names of connection attributes:
    Message::Passing::Role::HasHostnameAndPort
    Message::Passing::Role::HasUsernameAndPassword

  - Lots of additional documentation.

  - Add STDERR output.

  - Rename the log_chain function to message_chain and run_log_server
    function to run_message_server, in Message::Passing::DSL
    to follow the general rename, as we're not just about logs.

0.007
  - Documentation in the message-pass script

  - Add --configfile option to default script, allowing
    you to load config from a file, rather than supplying
    it on command line.

  - Make JSON encoder pass non refs straight through,
    so that if a previous filter generates a scalar,
    then this gets sent as-is.

  - Make JSON decoder pass refs straight through, to
    act as a no-op if the input has already decoded
    it's data into a hash.

  - Remove spurious warnings from reconnect code.

0.006
  - Rip JSON encoders and decoders out of inputs and
    outputs, making them optional and/or replaceable.
    *NOTE* Current Input / Output code will need updating
    for this change!!
  - Allow Null encoders or decoders.

0.005
   - Get connection timeouts and connection reconnects
     working in the generic ConnectionManager role.

   - Add link to syslog input

   - AMQP input/output is on CPAN

   - Add link to STOMP input/output.

0.004
   - Fix script name

   - Note irc channel and bug trackers in docs.

0.003
   - Updates and fixes to documentation.

   - Unify license/author/copyright to main file.

0.002_01
   - Add more core roles for use by extensions which need to make
     a connection.

   - Rename to Message::Passing, as it's a better description
     of what we do, and will cause less confusion with other projects.

0.002
    - Support a --daemonize option in logstash scripts.

    - Support a --pid_file option in logstash scripts.

    - Allow inputs to coerce a hash in output_to to an output,
      which is more verbose than the DSL, but also allows you
      to setup simple output chains from a simple data structure
      (such as you might read in from a config file).

    - Explicitly turn off output buffering in STDOUT output.
      This means that piping the STDOUT output to a file (for
      logging or debugging purposes) works as expected, without
      batching writes.

    - Change logstash script to use the perl interpreter it is
      installed with, rather than the one in $PATH right now.

    - Fix issue using Filter::T in the DSL

    - Fix multiple inputs going to the same output.

0.001
    - Initial version.

